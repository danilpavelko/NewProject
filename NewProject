#include <stdio.h>
#include <stdint.h>

char IntToSymbol(int num) {
	
	char symb = 0;

	if ((num < 0) || (num > 9)) 
	{
		return -1;
	}
	
	symb = num + '0';
	return symb;
}

int SymblToInt(char sybol)
{
	int num;

	if ((sybol < '0') || (sybol > '9'))
	{
		return -1;
	}

	num = sybol - '0';

	return num;

};
// "123456789" -> 123456789


int strLen(char* sym)
{
	int len = 0;

	while (sym[len] != '\0')
	{
		len++;
	}

	return len;
}


int SringToInt(char *sym, int Count)
{
	int i = 0;
	int num = 0;
	for (i = 0; sym[i] != '\0'; i++);

	for (int j = 0; j <  i; j++) 
	{
		if (sym[j] != '\0')
		{
			num = num * 10;
			num = num + SymblToInt(sym[j]);	
		}	
	}
	return num;
}


void main() 
{
	char symbA[16] = { 0 }, symbB[16] = { 0 }, symbC[16] = { 0 };

	int a, b, c;

	int cnt = 0;

	system("chcp 1251");
	printf("Sum two num A and B: \n");

	printf("Enter num A \t");
	scanf_s("%s", symbA, 16);

	cnt = strLen(&symbA[0]);

	printf("num A have %d symbol \n", cnt);
	if (cnt > 6) 
	{
		printf("erro, num A have %d symbol, max 6\n", cnt);
	}
	
	a = SringToInt(&symbA[0], &cnt);

	printf("Enter num B \t");
	scanf_s("%s", symbB, 16);

	cnt = strLen(&symbB[0]);
	b = SringToInt(&symbB[0], &cnt);
	printf("num B have %d symbol \n", cnt);
	if (cnt > 6)
	{
		printf("erro, num B have %d symbol, max 6\n", cnt);
	}
	//int SringToInt(char sym[16]);

	c = a + b;

	printf("%d + %d = %d\n", a, b, c);
	printf(strLen);
	/*cnt = strLen(&symbC[0]);
	c = SringToInt(&symbC[a+b], &cnt);
	printf("num C have %d symbol \n", cnt);*/
}
